# log configuration issues
error_log /var/log/nginx/error.log warn;

events {
}

http {
    sendfile on;
    # define logging format
    log_format geoproxy
               '[$time_local] $remote_addr '
               '$realip_remote_addr $remote_user '
               '$proxy_protocol_server_addr $proxy_protocol_server_port '
               '$request_method $server_protocol '
               '$scheme $server_name $uri $status '
               '$request_time $body_bytes_sent '
               '$geoip_city_country_code3 $geoip_region '
               '"$geoip_city" $http_x_forwarded_for '
               '$upstream_status $upstream_response_time '
               '"$http_referer" "$http_user_agent"';

    # define groups of servers that can be referenced by the proxy_pass
    upstream user {
        server users-api;
    }
    upstream feed {
        server feed-api;
    }
    upstream frontend {
        server frontend;
    }  
    server {
        listen 8080;
        # Add the header X-Request-ID to the response to the client
        add_header X-Request-ID $request_id;
        # enable logging
        access_log /var/log/nginx/nginx_access.log geoproxy;
        # add tracking/debugging information in the headers
        # Send the header X-Request-ID to the application
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Real-IP $remote_addr;
        
        # set up routes
        location api/v0/users {
            proxy_pass http://user;
            
        }
        location api/v0/feed {
            proxy_pass http://feed;
        }
    }
    server {
        listen 8100;
        add_header X-Request-ID $request_id;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://frontend;
    }
}
